---

- name: Update pip & related tools
  pip:
    name:
      - pip
      - setuptools
      - wheel
      - attrs
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install openwisp2 controller and its dependencies
  pip:
    name:
      - "{{ openwisp2_controller_version }}"
      - service_identity
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
  environment:
    LC_CTYPE: "en_US.UTF-8"
  notify: Reload application
  retries: 5
  delay: 10
  register: result
  until: result is success
  tags:
    - molecule-idempotence-notest

- name: Copy requirements.txt
  copy:
    src: requirements.txt
    dest: "{{ openwisp2_path }}/requirements.txt"

- name: Install python requirements
  pip:
    requirements: "{{ openwisp2_path }}/requirements.txt"
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
  notify: Reload application
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install openwisp2 network topology and its dependencies
  when: openwisp2_network_topology
  pip:
    name: "{{ openwisp2_network_topology_version }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
  notify: Reload application
  retries: 5
  delay: 10
  register: result
  until: result is success
  tags:
    - molecule-idempotence-notest

- name: Install openwisp firmware upgrader and its dependencies
  when: openwisp2_firmware_upgrader
  pip:
    name: "{{ openwisp2_firmware_upgrader_version }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
  notify: Reload application
  retries: 5
  delay: 10
  register: result
  until: result is success
  tags:
    - molecule-idempotence-notest

- name: Install openwisp monitoring and its dependencies
  when: openwisp2_monitoring
  pip:
    name: "{{ openwisp2_monitoring_version }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
  notify: Reload application
  retries: 5
  delay: 10
  register: result
  until: result is success
  tags:
    - molecule-idempotence-notest

- name: Install openwisp2_radius and its dependencies
  when: openwisp2_radius
  pip:
    name: "{{ openwisp2_radius_version }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
  notify: Reload application
  retries: 5
  delay: 10
  register: result
  until: result is success
  tags:
    - molecule-idempotence-notest

- name: Copy requirements-cors-headers.txt
  copy:
    src: requirements-cors-headers.txt
    dest: "{{ openwisp2_path }}/requirements-cors-headers.txt"
  when: openwisp2_django_cors.get('enabled')

- name: Install django-core-headers requirements
  pip:
    requirements: "{{ openwisp2_path }}/requirements-cors-headers.txt"
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
  when: openwisp2_django_cors.get('enabled')
  retries: 5
  delay: 10
  register: result
  until: result is success
  notify: Reload application

- name: Install extra python packages
  pip:
    name: "{{ openwisp2_extra_python_packages }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
  retries: 5
  delay: 10
  register: result
  until: result is success
  notify: Reload application
  tags: [extra_pip]

- name: Copy requirements-postgresql.txt
  copy:
    src: requirements-postgresql.txt
    dest: "{{ openwisp2_path }}/requirements-postgresql.txt"
  when: openwisp2_database.engine in ["django.db.backends.postgresql", "django.contrib.gis.db.backends.postgis"]

- name: Install PostgreSQL driver requirements
  pip:
    requirements: "{{ openwisp2_path }}/requirements-postgresql.txt"
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
  when: openwisp2_database.engine in ["django.db.backends.postgresql", "django.contrib.gis.db.backends.postgis"]
  retries: 5
  delay: 10
  register: result
  until: result is success
  notify: Reload application

- name: Copy requirements-mysql.txt
  copy:
    src: requirements-mysql.txt
    dest: "{{ openwisp2_path }}/requirements-mysql.txt"
  when: openwisp2_database.engine in ["django.db.backends.mysql", "django.contrib.gis.db.backends.mysql"]

- name: Install MYSQL driver requirements
  pip:
    requirements: "{{ openwisp2_path }}/requirements-mysql.txt"
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
  when: openwisp2_database.engine in ["django.db.backends.mysql", "django.contrib.gis.db.backends.mysql"]
  retries: 5
  delay: 10
  register: result
  until: result is success
  notify: Reload application

- name: Install raven (sentry client)
  when: openwisp2_sentry.get('dsn')
  pip:
    name: raven
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
  retries: 5
  delay: 10
  register: result
  until: result is success
  notify: Reload application

- name: Copy requirements-celery-email.txt
  copy:
    src: requirements-celery-email.txt
    dest: "{{ openwisp2_path }}/requirements-celery-email.txt"
  when: openwisp2_email_backend == "djcelery_email.backends.CeleryEmailBackend"

- name: Install celery-email requirements
  pip:
    requirements: "{{ openwisp2_path }}/requirements-celery-email.txt"
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
  when: openwisp2_email_backend == "djcelery_email.backends.CeleryEmailBackend"
  notify: Reload application
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install django
  pip:
    name: "{{ openwisp2_django_version }}"
    state: present
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
  retries: 5
  delay: 10
  register: result
  until: result is success
  notify: Reload application
  tags:
    - molecule-idempotence-notest

---

- name: create {{ openwisp2_path }}
  file:
    path: "{{ openwisp2_path }}"
    state: directory
    group: "{{ www_group }}"
    mode: 0770

- name: create "{{ openwisp2_path }}/openwisp2"
  file:
    path: "{{ openwisp2_path }}/openwisp2"
    state: directory
    group: "{{ www_group }}"
    mode: 0770

- name: create "{{ openwisp2_path }}/log"
  file:
    path: "{{ openwisp2_path }}/log"
    state: directory
    group: "{{ www_group }}"
    mode: 0770
    recurse: true
  tags:
    - molecule-idempotence-notest

- name: create "{{ openwisp2_path }}/static_custom"
  file:
    path: "{{ openwisp2_path }}/static_custom"
    state: directory
    group: "{{ www_group }}"
    mode: 0770
  tags:
    - openwisp2_theme

- name: manage.py
  notify: reload supervisor
  template:
    src: manage.py
    dest: "{{ openwisp2_path }}/manage.py"
    group: "{{ www_group }}"
    mode: 0754

- name: celery.py
  notify: reload supervisor
  template:
    src: openwisp2/celery.py
    dest: "{{ openwisp2_path }}/openwisp2/celery.py"
    group: "{{ www_group }}"
    mode: 0640

- name: __init__.py
  notify: reload supervisor
  template:
    src: openwisp2/__init__.py
    dest: "{{ openwisp2_path }}/openwisp2/__init__.py"
    group: "{{ www_group }}"
    mode: 0640

- name: urls.py
  notify: reload supervisor
  template:
    src: openwisp2/urls.py
    dest: "{{ openwisp2_path }}/openwisp2/urls.py"
    group: "{{ www_group }}"
    mode: 0640

- name: wsgi.py
  notify: reload supervisor
  template:
    src: openwisp2/wsgi.py
    dest: "{{ openwisp2_path }}/openwisp2/wsgi.py"
    group: "{{ www_group }}"
    mode: 0640

- name: asgi.py
  notify: reload supervisor
  template:
    src: openwisp2/asgi.py
    dest: "{{ openwisp2_path }}/openwisp2/asgi.py"
    group: "{{ www_group }}"
    mode: 0640

# set openwisp2_secret_key if not defined explicitly
- import_tasks: django_secret_key.yml
  when: openwisp2_secret_key is not defined

- name: settings.py
  notify: reload supervisor
  template:
    src: openwisp2/settings.py
    dest: "{{ openwisp2_path }}/openwisp2/settings.py"
    group: "{{ www_group }}"
    mode: 0640

- name: storage.py
  copy:
    src: storage.py
    dest: "{{ openwisp2_path }}/openwisp2/storage.py"
    mode: 0644

- name: routing.py
  notify: reload supervisor
  template:
    src: openwisp2/routing.py
    dest: "{{ openwisp2_path }}/openwisp2/routing.py"
    group: "{{ www_group }}"
    mode: 0640

- name: start redis for migration
  meta: flush_handlers

- name: migrate
  notify: reload supervisor
  become: true
  become_user: "{{ www_user }}"
  django_manage:
    app_path: "{{ openwisp2_path }}"
    command: migrate
    virtualenv: "{{ virtualenv_path }}"

- name: set permissions to sqlite db
  when: openwisp2_database.engine == "django.db.backends.sqlite3"
  file:
    path: "{{ openwisp2_database.name }}"
    state: file
    group: "{{ www_group }}"
    mode: 0770

- name: set permissions to "{{ openwisp2_path }}/static"
  file:
    path: "{{ openwisp2_path }}/static"
    state: directory
    group: "{{ www_group }}"
    owner: "{{ www_user }}"
    # sets executable only to directories
    mode: u=rwX,g=rX,o=rX
    recurse: true
  tags:
    - molecule-idempotence-notest

- name: copy static files
  become: true
  copy:
    src: ow2_static/
    dest: "{{ openwisp2_path }}/static_custom"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
    mode: 0640
  failed_when: false
  tags:
    - openwisp2_theme

- name: collectstatic
  notify: reload supervisor
  become: true
  become_user: "{{ www_user }}"
  django_manage:
    app_path: "{{ openwisp2_path }}"
    command: "collectstatic --noinput"
    virtualenv: "{{ virtualenv_path }}"
  register: collectstatic_output
  changed_when: '"\n0 static files" not in collectstatic_output.out'
  tags:
    - molecule-idempotence-notest

# needed to run compilemessages
# some .mo files are created in virtualenv_path
- name: set permissions to "{{ virtualenv_path }}"
  when: openwisp2_internationalization
  file:
    path: "{{ virtualenv_path }}"
    state: directory
    group: "{{ www_group }}"
    owner: "{{ www_user }}"
    # sets executable only to directories
    mode: u=rwX,g=rX,o=rX
    recurse: true
  tags:
    - molecule-idempotence-notest

- name: compilemessages
  notify: reload supervisor
  become: true
  become_user: "{{ www_user }}"
  when: openwisp2_internationalization
  django_manage:
    app_path: "{{openwisp2_path}}"
    command: "compilemessages"
    virtualenv: "{{ virtualenv_path }}"

- name: create load_initial_data.py script
  template:
    src: load_initial_data.py
    dest: "{{ openwisp2_path }}/load_initial_data.py"
    mode: 0754

- name: load initial data
  environment:
    PRIVATE_KEY: "{{ default_private_ssh_key.stdout | default(None) }}"
    PUBLIC_KEY: "{{ default_public_ssh_key.stdout | default(None) }}"
  command: "env/bin/python load_initial_data.py"
  register: load_initial_data_result
  changed_when: >
    "created" in load_initial_data_result.stdout
    or "changed" in load_initial_data_result.stdout
  args:
    chdir: "{{ openwisp2_path }}"
